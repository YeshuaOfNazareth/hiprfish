import numpy as np
import pandas as pd
import argparse
import glob
import re
from matplotlib import pyplot as plt
from matplotlib.colors import hsv_to_rgb
from matplotlib.gridspec import GridSpec
from matplotlib import cm
from mpl_toolkits.axes_grid1.inset_locator import inset_axes
from adjustText import adjust_text
import scipy
from scipy import stats
from mpl_toolkits.axes_grid1.inset_locator import inset_axes

data_folder = '/Users/hao/Documents/Research/Cornell/Projects/HIPRFISH/microbiome_experiments/imaging/09_10_2019_DSGN0567_analysis/'
data_folder = '/workdir/hs673/Runs/V1/Samples/HIPRFISH_imaging'
intensity_pearson_matrix = pd.read_csv('{}/intensity_pearson_matrix.csv'.format(data_folder), header = None).values

fig = plt.figure()
fig.set_size_inches(cm_to_inches(12), cm_to_inches(12))
ax = plt.Axes(fig, [0.006,0.006,0.95,0.95])
fig.add_axes(ax)
intensity_pearson_matrix[np.triu_indices(intensity_pearson_matrix.shape[0], k = 1)] = np.nan
mappable = ax.imshow(intensity_pearson_matrix, cmap = 'inferno')
ax.get_xaxis().set_visible(False)
ax.get_yaxis().set_visible(False)
plt.axis('off')
plt.tick_params(direction = 'in', length = 2)
cbaxes = fig.add_axes([0.2, 0.9, 0.1, 0.01])
cbar = plt.colorbar(mappable, cax = cbaxes, orientation = 'horizontal')
cbar.ax.tick_params(labelsize = 6, direction = 'in', length = 3)
cbar.set_label(r'$\rho_{pearson}$', color = 'black', fontsize = 8)
cbar.ax.yaxis.tick_right()
cbar.ax.yaxis.set_label_position('right')
ax.vlines(-2.5, -0.5, 13.5, color = (0,0.5,1), linewidth = 4)
ax.vlines(-2.5, 13.5, 28.5, color = (1,0.25,0), linewidth = 4)
ax.vlines(-2.5, 28.5, 43.5, color = (0.5,0,1), linewidth = 4)
ax.vlines(-2.5, 43.5, 58.5, color = 'olivedrab', linewidth = 4)
ax.hlines(60.5, 43.5, 58.5, color = (0,0.5,1), linewidth = 4)
ax.hlines(60.5, 28.5, 43.5, color = (1,0.25,0), linewidth = 4)
ax.hlines(60.5, 13.5, 28.5, color = (0.5,0,1), linewidth = 4)
ax.hlines(60.5, -0.5, 13.5, color = 'olivedrab', linewidth = 4)
ax.text(-5, 6.5, 'Ciprofloxacin Mouse 1', fontsize = 6, color = (0,0.5,1), va = 'center', rotation = -90)
ax.text(-5, 20.5, 'Ciprofloxacin Mouse 2', fontsize = 6, color = (1,0.25,0), va = 'center', rotation = -90)
ax.text(-5, 35.5, 'Control Mouse 1', fontsize = 6, color = (0.5,0,1), va = 'center', rotation = -90)
ax.text(-5, 50.5, 'Control Mouse 2', fontsize = 6, color = 'olivedrab', va = 'center', rotation = -90)
ax.text(6.5, 63, 'Control Mouse 2', fontsize = 6, color = 'olivedrab', ha = 'center', rotation = 0)
ax.text(20.5, 63, 'Control Mouse 1', fontsize = 6, color = (0.5,0,1), ha = 'center', rotation = 0)
ax.text(35.5, 63, 'Ciprofloxacin Mouse 2', fontsize = 6, color = (1,0.25,0), ha = 'center', rotation = 0)
ax.text(50.5, 63, 'Ciprofloxacin Mouse 1', fontsize = 6, color = (0,0.5,1), ha = 'center', rotation = 0)
plt.subplots_adjust(left = 0.05, bottom = 0.1, right = 0.99, top = 0.99)
plt.savefig('{}/taxa_max_intensity_pearson_correlation.pdf'.format(data_folder), dpi = 300, transparent = True)

fig = plt.figure()
fig.set_size_inches(cm_to_inches(18), cm_to_inches(16))
ax = plt.Axes(fig, [0.02,0.02,0.95,0.95])
fig.add_axes(ax)
mappable = ax.imshow(intensity_pearson_matrix, cmap = 'inferno')
# ax.xaxis.tick_top()
# plt.xticks(np.arange(intensity_pearson_matrix.shape[0]), sam_tab.Mouse_treatment.values, rotation = 90, fontsize = 8)
# ax.yaxis.tick_right()
# plt.yticks(np.arange(intensity_pearson_matrix.shape[0]), sam_tab.Mouse_treatment.values, fontsize = 8)
ax.get_xaxis().set_visible(False)
ax.get_yaxis().set_visible(False)
ax.spines()['left'].set_color('white')
ax.spines()['bottom'].set_color('white')
ax.spines()['right'].set_color('white')
ax.spines()['top'].set_color('white')
plt.axis('off')
plt.tick_params(direction = 'in', length = 2)
cbaxes = inset_axes(ax, width="4%", height="40%", loc = 5, bbox_to_anchor = (0.5,0.05,0.55,0.55), bbox_transform = ax.transAxes)
cbar = plt.colorbar(mappable, cax = cbaxes, orientation = 'vertical')
cbar.ax.spines()['left'].set_color('white')
cbar.ax.spines()['bottom'].set_color('white')
cbar.ax.spines()['right'].set_color('white')
cbar.ax.spines()['top'].set_color('white')
cbar.ax.tick_params(labelsize = 8, direction = 'in', length = 3, colors = 'white')
cbar.set_label(r'$\rho_{pearson}$', color = 'white', fontsize = 8)
cbar.ax.yaxis.tick_right()
cbar.ax.yaxis.set_label_position('right')
ax.hlines(-2.5, -0.5, 13.5, color = (0,0.5,1), linewidth = 4)
ax.hlines(-2.5, 13.5, 28.5, color = (1,0.5,0), linewidth = 4)
ax.hlines(-2.5, 28.5, 43.5, color = (0.5,0,1), linewidth = 4)
ax.hlines(-2.5, 43.5, 58.5, color = (0.5,1,0), linewidth = 4)
ax.vlines(60.5, 43.5, 58.5, color = (0,0.5,1), linewidth = 4)
ax.vlines(60.5, 28.5, 43.5, color = (1,0.5,0), linewidth = 4)
ax.vlines(60.5, 13.5, 28.5, color = (0.5,0,1), linewidth = 4)
ax.vlines(60.5, -0.5, 13.5, color = (0.5,1,0), linewidth = 4)
ax.text(6.5, -4, 'Ciprofloxacin Mouse 1', fontsize = 8, color = (0,0.5,1), ha = 'center')
ax.text(20.5, -4, 'Ciprofloxacin Mouse 2', fontsize = 8, color = (1,0.5,0), ha = 'center')
ax.text(35.5, -4, 'Control Mouse 1', fontsize = 8, color = (0.5,0,1), ha = 'center')
ax.text(50.5, -4, 'Control Mouse 2', fontsize = 8, color = (0.5,1,0), ha = 'center')
ax.text(62, 6.5, 'Control Mouse 2', fontsize = 8, color = (0.5,1,0), va = 'center', rotation = -90)
ax.text(62, 20.5, 'Control Mouse 1', fontsize = 8, color = (0.5,0,1), va = 'center', rotation = -90)
ax.text(62, 35.5, 'Ciprofloxacin Mouse 2', fontsize = 8, color = (1,0.5,0), va = 'center', rotation = -90)
ax.text(62, 50.5, 'Ciprofloxacin Mouse 1', fontsize = 8, color = (0,0.5,1), va = 'center', rotation = -90)
plt.subplots_adjust(left = 0.05, bottom = 0.05, right = 0.95, top = 0.95)
plt.savefig('{}/taxa_max_intensity_pearson_correlation_presentation.png'.format(input_directory), dpi = 300, transparent = True)


intensity_pval_matrix = pd.read_csv('{}/intensity_pval_matrix.csv'.format(data_folder), header = None).values

fig = plt.figure()
fig.set_size_inches(cm_to_inches(18), cm_to_inches(16))
ax = plt.Axes(fig, [0.02,0.02,0.95,0.95])
fig.add_axes(ax)
mappable = ax.imshow(-np.log10(intensity_pval_matrix), cmap = 'inferno')
# ax.xaxis.tick_top()
# plt.xticks(np.arange(intensity_pearson_matrix.shape[0]), sam_tab.Mouse_treatment.values, rotation = 90, fontsize = 8)
# ax.yaxis.tick_right()
# plt.yticks(np.arange(intensity_pearson_matrix.shape[0]), sam_tab.Mouse_treatment.values, fontsize = 8)
ax.get_xaxis().set_visible(False)
ax.get_yaxis().set_visible(False)
plt.axis('off')
plt.tick_params(direction = 'in', length = 2)
cbaxes = inset_axes(ax, width="4%", height="40%", loc = 5, bbox_to_anchor = (0.5,0.05,0.55,0.55), bbox_transform = ax.transAxes)
cbar = plt.colorbar(mappable, cax = cbaxes, orientation = 'vertical')
cbar.ax.tick_params(labelsize = 8, direction = 'in', length = 3)
cbar.set_label(r'$-\log_{10}$(p)', color = 'black', fontsize = 8)
cbar.ax.yaxis.tick_right()
cbar.ax.yaxis.set_label_position('right')
ax.hlines(-2.5, -0.5, 13.5, color = (0,0.5,1), linewidth = 4)
ax.hlines(-2.5, 13.5, 28.5, color = (1,0.5,0), linewidth = 4)
ax.hlines(-2.5, 28.5, 43.5, color = (0.5,0,1), linewidth = 4)
ax.hlines(-2.5, 43.5, 58.5, color = (0.5,1,0), linewidth = 4)
ax.vlines(60.5, 43.5, 58.5, color = (0,0.5,1), linewidth = 4)
ax.vlines(60.5, 28.5, 43.5, color = (1,0.5,0), linewidth = 4)
ax.vlines(60.5, 13.5, 28.5, color = (0.5,0,1), linewidth = 4)
ax.vlines(60.5, -0.5, 13.5, color = (0.5,1,0), linewidth = 4)
ax.text(6.5, -4, 'Ciprofloxacin Mouse 1', fontsize = 8, color = (0,0.5,1), ha = 'center')
ax.text(20.5, -4, 'Ciprofloxacin Mouse 2', fontsize = 8, color = (1,0.5,0), ha = 'center')
ax.text(35.5, -4, 'Control Mouse 1', fontsize = 8, color = (0.5,0,1), ha = 'center')
ax.text(50.5, -4, 'Control Mouse 2', fontsize = 8, color = (0.5,1,0), ha = 'center')
ax.text(62, 6.5, 'Control Mouse 2', fontsize = 8, color = (0.5,1,0), va = 'center', rotation = -90)
ax.text(62, 20.5, 'Control Mouse 1', fontsize = 8, color = (0.5,0,1), va = 'center', rotation = -90)
ax.text(62, 35.5, 'Ciprofloxacin Mouse 2', fontsize = 8, color = (1,0.5,0), va = 'center', rotation = -90)
ax.text(62, 50.5, 'Ciprofloxacin Mouse 1', fontsize = 8, color = (0,0.5,1), va = 'center', rotation = -90)
plt.subplots_adjust(left = 0.05, bottom = 0.05, right = 0.95, top = 0.95)
plt.savefig('{}/taxa_max_intensity_pearson_pval.png'.format(input_directory), dpi = 300)

input_directory = '/Users/hao/Documents/Research/Cornell/Projects/HIPRFISH/microbiome_experiments/imaging/09_11_2019_DSGN0567_replicate_FFPE_section_analysis'
intensity_pearson_matrix = pd.read_csv('{}/intensity_pearson_matrix.csv'.format(input_directory), header = None).values

fig = plt.figure()
fig.set_size_inches(cm_to_inches(6), cm_to_inches(6))
ax = plt.Axes(fig, [0.05,0.05,0.94,0.94])
fig.add_axes(ax)
intensity_pearson_matrix[np.triu_indices(intensity_pearson_matrix.shape[0], k = 1)] = np.nan
mappable = ax.imshow(intensity_pearson_matrix, cmap = 'inferno')
ax.get_xaxis().set_visible(False)
ax.get_yaxis().set_visible(False)
plt.axis('off')
plt.tick_params(direction = 'in', length = 2)
cbaxes = fig.add_axes([0.35, 0.9, 0.2, 0.02])
cbar = plt.colorbar(mappable, cax = cbaxes, orientation = 'horizontal')
cbar.ax.tick_params(labelsize = 6, direction = 'in', length = 3)
cbar.set_label(r'$\rho_{pearson}$', color = 'black', fontsize = 8)
cbar.ax.yaxis.tick_right()
cbar.ax.yaxis.set_label_position('right')
ax.vlines(-1.5, -0.5, 14.5, color = (0,0.5,1), linewidth = 4)
ax.vlines(-1.5, 14.5, 29.5, color = (1,0.5,0), linewidth = 4)
ax.hlines(30.5, 14.5, 29.5, color = (0,0.5,1), linewidth = 4)
ax.hlines(30.5, -0.5, 14.5, color = (1,0.5,0), linewidth = 4)
ax.text(-4, 6.5, 'FFPE Section 1', fontsize = 6, color = (0,0.5,1), va = 'center', rotation = -90)
ax.text(-4, 22.5, 'FFPE Section 2', fontsize = 6, color = (1,0.5,0), va = 'center', rotation = -90)
ax.text(6.5, 33, 'FFPE Section 2', fontsize = 6, color = (1,0.5,0), ha = 'center', rotation = 0)
ax.text(22.5, 33, 'FFPE Section 1', fontsize = 6, color = (0,0.5,1), ha = 'center', rotation = 0)
plt.subplots_adjust(left = 0.4, bottom = 0.4, right = 0.96, top = 0.96)
plt.savefig('{}/taxa_max_intensity_pearson_correlation_section.pdf'.format(data_folder), dpi = 300)

fig = plt.figure()
fig.set_size_inches(cm_to_inches(8.5), cm_to_inches(7.5))
ax = plt.Axes(fig, [0.01,0.01,0.75,0.9])
fig.add_axes(ax)
mappable = ax.imshow(intensity_pearson_matrix, cmap = 'inferno')
# ax.xaxis.tick_top()
# plt.xticks(np.arange(intensity_pearson_matrix.shape[0]), sam_tab.Mouse_treatment.values, rotation = 90, fontsize = 8)
# ax.yaxis.tick_right()
# plt.yticks(np.arange(intensity_pearson_matrix.shape[0]), sam_tab.Mouse_treatment.values, fontsize = 8)
ax.get_xaxis().set_visible(False)
ax.get_yaxis().set_visible(False)
plt.axis('off')
plt.tick_params(direction = 'in', length = 2)
cbaxes = inset_axes(ax, width="4%", height="40%", loc = 5, bbox_to_anchor = (0.5,0.05, 0.65, 0.65), bbox_transform = ax.transAxes)
cbar = plt.colorbar(mappable, cax = cbaxes, orientation = 'vertical')
cbar.ax.tick_params(labelsize = 8, direction = 'in', length = 3, colors = 'white')
cbar.set_label(r'$\rho_{pearson}$', color = 'white', fontsize = 8)
cbar.ax.spines['left'].set_color('white')
cbar.ax.spines['bottom'].set_color('white')
cbar.ax.spines['right'].set_color('white')
cbar.ax.spines['top'].set_color('white')
cbar.ax.yaxis.tick_right()
cbar.ax.yaxis.set_label_position('right')
ax.hlines(-1.5, -0.5, 14.5, color = (0,0.5,1), linewidth = 4)
ax.hlines(-1.5, 14.5, 29.5, color = (1,0.5,0), linewidth = 4)
ax.vlines(30.5, 14.5, 29.5, color = (0,0.5,1), linewidth = 4)
ax.vlines(30.5, -0.5, 14.5, color = (1,0.5,0), linewidth = 4)
ax.text(6.5, -3, 'FFPE Section 1', fontsize = 8, color = (0,0.5,1), ha = 'center')
ax.text(20.5, -3, 'FFPE Section 2', fontsize = 8, color = (1,0.5,0), ha = 'center')
ax.text(32, 6.5, 'FFPE Section 2', fontsize = 8, color = (1,0.5,0), va = 'center', rotation = -90)
ax.text(32, 20.5, 'FFPE Section 1', fontsize = 8, color = (0,0.5,1), va = 'center', rotation = -90)
plt.subplots_adjust(left = 0, bottom = 0.05, right = 0.95, top = 0.95)
plt.savefig('{}/taxa_max_intensity_pearson_correlation_presentation.png'.format(input_directory), dpi = 300, transparent = True)

intensity_pval_matrix = pd.read_csv('{}/intensity_pval_matrix.csv'.format(input_directory), header = None).values

fig = plt.figure()
fig.set_size_inches(cm_to_inches(8.5), cm_to_inches(7.5))
ax = plt.Axes(fig, [0.01,0.01,0.75,0.9])
fig.add_axes(ax)
mappable = ax.imshow(-np.log10(intensity_pval_matrix), cmap = 'inferno')
# ax.xaxis.tick_top()
# plt.xticks(np.arange(intensity_pearson_matrix.shape[0]), sam_tab.Mouse_treatment.values, rotation = 90, fontsize = 8)
# ax.yaxis.tick_right()
# plt.yticks(np.arange(intensity_pearson_matrix.shape[0]), sam_tab.Mouse_treatment.values, fontsize = 8)
ax.get_xaxis().set_visible(False)
ax.get_yaxis().set_visible(False)
plt.axis('off')
plt.tick_params(direction = 'in', length = 2)
cbaxes = inset_axes(ax, width="4%", height="40%", loc = 5, bbox_to_anchor = (0.5,0.05,0.65,0.65), bbox_transform = ax.transAxes)
cbar = plt.colorbar(mappable, cax = cbaxes, orientation = 'vertical')
cbar.ax.tick_params(labelsize = 8, direction = 'in', length = 3)
cbar.set_label(r'$-\log_{10}$(p)', color = 'black', fontsize = 8)
cbar.ax.yaxis.tick_right()
cbar.ax.yaxis.set_label_position('right')
ax.hlines(-1.5, -0.5, 14.5, color = (0,0.5,1), linewidth = 4)
ax.hlines(-1.5, 14.5, 29.5, color = (1,0.5,0), linewidth = 4)
ax.vlines(30.5, 14.5, 29.5, color = (0,0.5,1), linewidth = 4)
ax.vlines(30.5, -0.5, 14.5, color = (1,0.5,0), linewidth = 4)
ax.text(6.5, -3, 'FFPE Section 1', fontsize = 8, color = (0,0.5,1), ha = 'center')
ax.text(20.5, -3, 'FFPE Section 2', fontsize = 8, color = (1,0.5,0), ha = 'center')
ax.text(32, 6.5, 'FFPE Section 2', fontsize = 8, color = (1,0.5,0), va = 'center', rotation = -90)
ax.text(32, 20.5, 'FFPE Section 1', fontsize = 8, color = (0,0.5,1), va = 'center', rotation = -90)
plt.subplots_adjust(left = 0, bottom = 0.05, right = 0.95, top = 0.95)
plt.savefig('{}/taxa_max_intensity_pearson_pval.png'.format(input_directory), dpi = 300)

input_directory = '/Users/Hao/Documents/Research/Cornell/Projects/HIPRFISH/microbiome_experiments/imaging/09_11_2019_DSGN0567_replicate_FFPE_section_analysis/'
taxon_lookup_filename = '{}/taxon_color_lookup.csv'.format(input_directory)
taxon_lookup = pd.read_csv(taxon_lookup_filename, dtype = {'code': str})
taxon_lookup = taxon_lookup.rename(columns = {'code':'cell_barcode'})
sample_table_filename = '{}/sample_table.csv'.format(input_directory)
sam_tab = pd.read_csv(sample_table_filename)

samples = sam_tab.Sample.values
cell_info_list = []
for s in samples:
    cell_info = pd.read_csv('{}/{}_cell_information_filtered.csv'.format(input_directory, s), dtype = {'cell_barcode': str})
    avgint_filtered = pd.read_csv('{}/{}_avgint_filtered.csv'.format(input_directory, s))
    cell_info['max_raw_intensity'] = np.max(avgint_filtered, axis = 1)
    cell_info_list.append(cell_info)

taxa_max_intensity_df = cell_info_list[0].groupby(['cell_barcode'])['max_raw_intensity'].mean().reset_index()
taxa_max_intensity_df.columns = ['cell_barcode', 'max_intensity_0']
for i in range(1, len(samples)):
    taxa_max_intensity = cell_info_list[i].groupby(['cell_barcode'])['max_raw_intensity'].mean().reset_index()
    taxa_max_intensity.columns = ['cell_barcode', 'max_intensity_{}'.format(i)]
    taxa_max_intensity_df = taxa_max_intensity_df.merge(taxa_max_intensity, on = 'cell_barcode', how = 'outer')

taxa_max_intensity_lookup = taxa_max_intensity_df.merge(taxon_lookup, on = 'cell_barcode', how = 'left')
taxa_max_intensity_lookup.to_csv('{}/taxa_max_intensity_lookup.csv'.format(input_directory), header = None, index = None)

i = 3
j = 5
i_na_index = taxa_max_intensity_df.iloc[:,i+1].isna()
j_na_index = taxa_max_intensity_df.iloc[:,j+1].isna()
na_index = i_na_index | j_na_index
fig = plt.figure()
fig.set_size_inches(cm_to_inches(8), cm_to_inches(8))
plt.plot([0,0.5], [0,0.5], '--', color = 'gray', linewidth = 2)
plt.plot(taxa_max_intensity_df.iloc[:,i+1][~na_index], taxa_max_intensity_df.iloc[:,j+1][~na_index], 'o', color = (0,0.5,1), markersize = 4)
plt.plot(taxa_max_intensity_df.iloc[:,i+1][~i_na_index & j_na_index], np.zeros(taxa_max_intensity_df.iloc[:,i+1][~i_na_index & j_na_index].shape[0]), 'o', color = (1,0.5,0), markersize = 4)
plt.plot(np.zeros(taxa_max_intensity_df.iloc[:,j+1][~j_na_index & i_na_index].shape[0]), taxa_max_intensity_df.iloc[:,j+1][~j_na_index & i_na_index], 'o', color = (1,0.5,0), markersize = 4)
plt.tick_params(labelsize = 10, direction = 'in', length = 2, bottom = False, left = False, colors = 'white')
plt.axes().set_aspect('equal')
plt.axes().spines['left'].set_color('white')
plt.axes().spines['right'].set_color('white')
plt.axes().spines['bottom'].set_color('white')
plt.axes().spines['top'].set_color('white')
plt.xlabel('FOV 1 Intensity', color = 'white')
plt.ylabel('FOV 2 Intensity', color = 'white')
plt.subplots_adjust(left = 0.15, bottom = 0.15, right = 0.98, top = 0.98)
plt.savefig('{}/taxa_max_intensity_example.pdf'.format(input_directory), transparent = True, dpi = 300)




#####
